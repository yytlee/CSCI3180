000000*
000000*CSCI3180 Principles of Programming Languages
000000*
000000*--- Declaration ---
000000*
000000*I declare that the assignment here submitted is original except for source
000000*material explicitly acknowledged. I also acknowledge that I am aware of
000000*University policy and regulations on honesty in academic work, and of the
000000*disciplinary guidelines and procedures applicable to breaches of such policy
000000*and regulations, as contained in the website
000000*http://www.cuhk.edu.hk/policy/academichonesty/
000000*
000000*Assignment 1
000000*Name : Lee Tsz Yan
000000*Student ID : 1155110177
000000*Email Addr : tylee8@cse.cuhk.edu.hk
000000*                                                               
000000******************************************************************
000000 IDENTIFICATION DIVISION.
000000 PROGRAM-ID.  TA_RANKING.
000000******************************************************************
000000 ENVIRONMENT DIVISION.
000000 INPUT-OUTPUT SECTION.
000000 FILE-CONTROL.
000000     SELECT OPTIONAL INSTRUCTORS-FILE
000000        ASSIGN TO 'instructors.txt'
000000        ORGANIZATION IS LINE SEQUENTIAL
000000        FILE STATUS IS INSTRUCTOR.
000000     SELECT OPTIONAL CANDIDATES-FILE
000000        ASSIGN TO 'candidates.txt'
000000        ORGANIZATION IS LINE SEQUENTIAL
000000        FILE STATUS IS CANDIDATE.
000000     SELECT OPTIONAL OUTPUT-FILE
000000        ASSIGN TO 'OUTPUT.txt'
000000        ORGANIZATION IS BINARY SEQUENTIAL
000000        FILE STATUS IS OUT.
000000
000000 DATA DIVISION.
000000     FILE SECTION.
000000     FD INSTRUCTORS-FILE.
000000     01 INSTRUCTORS.
000000        05 COURSE-ID PIC 9(5).
000000        05 REQ-SKILL OCCURS 3 TIMES PIC A(15).
000000        05 OPT-SKILL OCCURS 5 TIMES PIC A(15).
000000
000000     FD CANDIDATES-FILE.
000000     01 CONDIDATES.
000000        05 SID PIC 9(11).
000000        05 SKILL OCCURS 8 TIMES PIC A(15).
000000        05 PREF OCCURS 3 TIMES PIC 9(5).
000000     
000000     FD OUTPUT-FILE.
000000     01 RESULT.
000000        05 CID PIC 9(5).
000000        05 CANDI OCCURS 3 TIMES PIC 9(11).
000000        05 ENDLINE PIC X.
000000
000000 WORKING-STORAGE SECTION.
000000     01 CANDIDATE PIC XX.
000000     01 INSTRUCTOR PIC XX.
000000     01 OUT PIC XX.
000000     01 SCORE PIC 9V9 VALUE 0.
000000     01 CANDID-COUNT PIC 9 VALUE 0.
000000     01 INSTRU-COUNT PIC 9 VALUE 0.
000000     01 RANKING.
000000        05 RANK OCCURS 3 TIMES PIC 9 VALUE 0.
000000        05 RANK-ID OCCURS 3 TIMES PIC 9(11) VALUE 0.
000000     01 WS-EOF PIC A(1).
000000 PROCEDURE DIVISION.
000000 OPENFILE.
000000     OPEN INPUT INSTRUCTORS-FILE.
000000     OPEN INPUT CANDIDATES-FILE.
000000     IF INSTRUCTOR NOT = 00 THEN
000000        DISPLAY "non-existing file!"
000000        CLOSE INSTRUCTORS-FILE
000000        GO TO ENDDING
000000     END-IF.
000000     IF CANDIDATE NOT = 00 THEN 
000000        DISPLAY "non-existing file!"
000000        CLOSE CANDIDATES-FILE
000000        GO TO ENDDING
000000     END-IF.
000000     
000000 READ-INSTRU.
000000*    DISPLAY "READ-INSTRU".
000000     READ INSTRUCTORS-FILE
000000        AT END GO TO ENDDING
000000        
000000     END-READ.
000000     MOVE 0 TO RANK(1)
000000     MOVE 0 TO RANK(2)
000000     MOVE 0 TO RANK(3)
000000     MOVE 0 TO RANK-ID(1)
000000     MOVE 0 TO RANK-ID(2)
000000     MOVE 0 TO RANK-ID(3)
000000     OPEN INPUT CANDIDATES-FILE.
000000     
000000 READ-CANDIT.
000000*    DISPLAY "READ-CANDIT".
000000     
000000     READ CANDIDATES-FILE
000000        AT END CLOSE CANDIDATES-FILE
000000        GO TO PRINT-FILE
000000     END-READ.
000000
000000     MOVE 0 TO SCORE.
000000     MOVE 1 TO CANDID-COUNT.
000000     MOVE 1 TO INSTRU-COUNT.
000000*    DISPLAY WS-EOF COURSE-ID SID.
000000 
000000 REQ-CHECK.
000000*    DISPLAY "REQ-CHECK".
000000     IF INSTRU-COUNT = 4 THEN
000000        MOVE 1 TO INSTRU-COUNT
000000        MOVE 1 TO CANDID-COUNT
000000        ADD 1 TO SCORE
000000        GO TO OPT-CALC
000000     END-IF.
000000     IF REQ-SKILL(INSTRU-COUNT) = SKILL(CANDID-COUNT) THEN
000000        ADD 1 TO INSTRU-COUNT
000000        MOVE 1 TO CANDID-COUNT
000000*       DISPLAY "MATCH"
000000        GO TO REQ-CHECK
000000     END-IF.
000000     IF CANDID-COUNT = 9 THEN
000000        GO TO READ-CANDIT
000000     END-IF.
000000     ADD 1 TO CANDID-COUNT.
000000     GO TO REQ-CHECK.
000000     
000000 OPT-CALC.
000000*    DISPLAY "OPT-CALC".
000000     IF OPT-SKILL(INSTRU-COUNT) = SKILL(CANDID-COUNT) THEN
000000        ADD 1 TO SCORE
000000        ADD 1 TO INSTRU-COUNT
000000        MOVE 0 TO CANDID-COUNT
000000        GO TO OPT-CALC
000000     END-IF.
000000     ADD 1 TO CANDID-COUNT.
000000     
000000     IF CANDID-COUNT = 9 THEN
000000        ADD 1 TO INSTRU-COUNT
000000        MOVE 0 TO CANDID-COUNT
000000     END-IF.
000000     
000000     IF INSTRU-COUNT = 6 THEN
000000        GO TO PREF-CALC
000000     END-IF.
000000     GO TO OPT-CALC.
000000     
000000 PREF-CALC.
000000     IF COURSE-ID = PREF(1) THEN
000000        ADD 1.5 TO SCORE
000000        GO TO COMPARE
000000     END-IF.
000000     IF COURSE-ID = PREF(2) THEN
000000        ADD 1 TO SCORE
000000        GO TO COMPARE
000000     END-IF.
000000     IF COURSE-ID = PREF(3) THEN
000000        ADD 0.5 TO SCORE
000000        GO TO COMPARE
000000     END-IF.
000000     
000000 COMPARE.
000000*    DISPLAY COURSE-ID SID SCORE.
000000     
000000     IF SCORE > RANK(1) THEN
000000        MOVE RANK(2) TO RANK(3)
000000        MOVE RANK-ID(2) TO RANK-ID(3)
000000        MOVE RANK(1) TO RANK(2)
000000        MOVE RANK-ID(1) TO RANK-ID(2)
000000        MOVE SCORE TO RANK(1)
000000        MOVE SID TO RANK-ID(1)
000000        GO TO READ-CANDIT
000000     END-IF.
000000     IF SCORE = RANK(1) AND SID < RANK-ID(1) THEN
000000        MOVE RANK(2) TO RANK(3)
000000        MOVE RANK-ID(2) TO RANK-ID(3)
000000        MOVE RANK(1) TO RANK(2)
000000        MOVE RANK-ID(1) TO RANK-ID(2)
000000        MOVE SCORE TO RANK(1)
000000        MOVE SID TO RANK-ID(1)
000000        GO TO READ-CANDIT
000000     END-IF.
000000     IF SCORE > RANK(2) THEN
000000        MOVE RANK(2) TO RANK(3)
000000        MOVE RANK-ID(2) TO RANK-ID(3)
000000        MOVE SCORE TO RANK(2)
000000        MOVE SID TO RANK-ID(2)
000000        GO TO READ-CANDIT
000000     END-IF.
000000     IF SCORE = RANK(2) AND SID < RANK-ID(2) THEN
000000        MOVE RANK(2) TO RANK(3)
000000        MOVE RANK-ID(2) TO RANK-ID(3)
000000        MOVE SCORE TO RANK(2)
000000        MOVE SID TO RANK-ID(2)
000000        GO TO READ-CANDIT
000000     END-IF.
000000     IF SCORE > RANK(3) THEN
000000        MOVE SCORE TO RANK(3)
000000        MOVE SID TO RANK-ID(3)
000000        GO TO READ-CANDIT
000000     END-IF.
000000     IF SCORE = RANK(3) AND SID < RANK-ID(3) THEN
000000        MOVE SCORE TO RANK(3)
000000        MOVE SID TO RANK-ID(3)
000000        GO TO READ-CANDIT
000000     END-IF.
000000     GO TO READ-CANDIT.
000000     
000000 PRINT-FILE.
000000*    DISPLAY RANK-ID(1) RANK-ID(2) RANK-ID(3).
000000     MOVE COURSE-ID TO CID.
000000     MOVE RANK-ID(1) TO CANDI(1).
000000     MOVE RANK-ID(2) TO CANDI(2).
000000     MOVE RANK-ID(3) TO CANDI(3).
000000     IF CANDI(1) = 0 THEN
000000        MOVE '0000000000 ' TO CANDI(1)
000000     END-IF.
000000     IF CANDI(2) = 0 THEN
000000        MOVE '0000000000 ' TO CANDI(2)
000000     END-IF.
000000     IF CANDI(3) = 0 THEN
000000        MOVE '0000000000 ' TO CANDI(3)
000000     END-IF.
000000     MOVE x'0a' TO ENDLINE.
000000     OPEN OUTPUT OUTPUT-FILE.
000000     WRITE RESULT.
000000     
000000     GO TO READ-INSTRU.
000000     
000000 ENDDING.    
000000     CLOSE INSTRUCTORS-FILE.
000000     CLOSE CANDIDATES-FILE.
000000     CLOSE OUTPUT-FILE.
000000     
000000 STOP-RUN.
000000     