000100*
000200*CSCI3180 Principles of Programming Languages
000300*
000400*--- Declaration ---
000500*
000600*I declare that the assignment here submitted is original except for source
000700*material explicitly acknowledged. I also acknowledge that I am aware of
000800*University policy and regulations on honesty in academic work, and of the
000900*disciplinary guidelines and procedures applicable to breaches of such policy
001000*and regulations, as contained in the website
001100*http://www.cuhk.edu.hk/policy/academichonesty/
001200*
001300*Assignment 1
001400*Name : Lee Tsz Yan
001500*Student ID : 1155110177
001600*Email Addr : tylee8@cse.cuhk.edu.hk
001700*                                                               
001800******************************************************************
001900 IDENTIFICATION DIVISION.
002000 PROGRAM-ID.  TA_RANKING.
002100******************************************************************
002200 ENVIRONMENT DIVISION.
002300 INPUT-OUTPUT SECTION.
002400 FILE-CONTROL.
002500     SELECT OPTIONAL INSTRUCTORS-FILE
002600        ASSIGN TO 'instructors.txt'
002700        ORGANIZATION IS LINE SEQUENTIAL
002800        FILE STATUS IS INSTRUCTOR.
002900     SELECT OPTIONAL CANDIDATES-FILE
003000        ASSIGN TO 'candidates.txt'
003100        ORGANIZATION IS LINE SEQUENTIAL
003200        FILE STATUS IS CANDIDATE.
003300     SELECT OPTIONAL OUTPUT-FILE
003400        ASSIGN TO 'OUTPUT.txt'
003500        ORGANIZATION IS BINARY SEQUENTIAL
003600        FILE STATUS IS OUT.
003700
003800 DATA DIVISION.
003900     FILE SECTION.
004000     FD INSTRUCTORS-FILE.
004100     01 INSTRUCTORS.
004200        05 COURSE-ID PIC 9(5).
004300        05 REQ-SKILL OCCURS 3 TIMES PIC A(15).
004400        05 OPT-SKILL OCCURS 5 TIMES PIC A(15).
004500
004600     FD CANDIDATES-FILE.
004700     01 CONDIDATES.
004800        05 SID PIC 9(11).
004900        05 SKILL OCCURS 8 TIMES PIC A(15).
005000        05 PREF OCCURS 3 TIMES PIC 9(5).
005100     
005200     FD OUTPUT-FILE.
005300     01 RESULT.
005400        05 CID PIC 9(5).
005500        05 CANDI OCCURS 3 TIMES PIC 9(11).
005600        05 ENDLINE PIC X.
005700
005800 WORKING-STORAGE SECTION.
005900     01 CANDIDATE PIC XX.
006000     01 INSTRUCTOR PIC XX.
006100     01 OUT PIC XX.
006200     01 SCORE PIC 9V9 VALUE 0.
006300     01 CANDID-COUNT PIC 9 VALUE 0.
006400     01 INSTRU-COUNT PIC 9 VALUE 0.
006500     01 RANKING.
006600        05 RANK OCCURS 3 TIMES PIC 9 VALUE 0.
006700        05 RANK-ID OCCURS 3 TIMES PIC 9(11) VALUE 0.
006800 PROCEDURE DIVISION.
006900 OPENFILE.
007000     OPEN INPUT INSTRUCTORS-FILE.
007100     OPEN INPUT CANDIDATES-FILE.
007200     IF INSTRUCTOR NOT = 00 THEN
007300        DISPLAY "non-existing file!"
007400        CLOSE INSTRUCTORS-FILE
007500        GO TO ENDDING
007600     END-IF.
007700     IF CANDIDATE NOT = 00 THEN 
007800        DISPLAY "non-existing file!"
007900        CLOSE CANDIDATES-FILE
008000        GO TO ENDDING
008100     END-IF.
008200     
008300 READ-INSTRU.
008400*    DISPLAY "READ-INSTRU".
008500     READ INSTRUCTORS-FILE
008600        AT END GO TO ENDDING
008700        
008800     END-READ.
008900     MOVE 0 TO RANK(1)
009000     MOVE 0 TO RANK(2)
009100     MOVE 0 TO RANK(3)
009200     MOVE 0 TO RANK-ID(1)
009300     MOVE 0 TO RANK-ID(2)
009400     MOVE 0 TO RANK-ID(3)
009500     OPEN INPUT CANDIDATES-FILE.
009600     
009700 READ-CANDIT.
009800*    DISPLAY "READ-CANDIT".
009900     
010000     READ CANDIDATES-FILE
010100        AT END CLOSE CANDIDATES-FILE
010200        GO TO PRINT-FILE
010300     END-READ.
010400
010500     MOVE 0 TO SCORE.
010600     MOVE 1 TO CANDID-COUNT.
010700     MOVE 1 TO INSTRU-COUNT.
010800*    DISPLAY WS-EOF COURSE-ID SID.
010900 
011000 REQ-CHECK.
011100*    DISPLAY "REQ-CHECK".
011200     IF INSTRU-COUNT = 4 THEN
011300        MOVE 1 TO INSTRU-COUNT
011400        MOVE 1 TO CANDID-COUNT
011500        ADD 1 TO SCORE
011600        GO TO OPT-CALC
011700     END-IF.
011800     IF REQ-SKILL(INSTRU-COUNT) = SKILL(CANDID-COUNT) THEN
011900        ADD 1 TO INSTRU-COUNT
012000        MOVE 1 TO CANDID-COUNT
012100*       DISPLAY "MATCH"
012200        GO TO REQ-CHECK
012300     END-IF.
012400     IF CANDID-COUNT = 9 THEN
012500        GO TO READ-CANDIT
012600     END-IF.
012700     ADD 1 TO CANDID-COUNT.
012800     GO TO REQ-CHECK.
012900     
013000 OPT-CALC.
013100*    DISPLAY "OPT-CALC".
013200     IF OPT-SKILL(INSTRU-COUNT) = SKILL(CANDID-COUNT) THEN
013300        ADD 1 TO SCORE
013400        ADD 1 TO INSTRU-COUNT
013500        MOVE 0 TO CANDID-COUNT
013600        GO TO OPT-CALC
013700     END-IF.
013800     ADD 1 TO CANDID-COUNT.
013900     
014000     IF CANDID-COUNT = 9 THEN
014100        ADD 1 TO INSTRU-COUNT
014200        MOVE 0 TO CANDID-COUNT
014300     END-IF.
014400     
014500     IF INSTRU-COUNT = 6 THEN
014600        GO TO PREF-CALC
014700     END-IF.
014800     GO TO OPT-CALC.
014900     
015000 PREF-CALC.
015100     IF COURSE-ID = PREF(1) THEN
015200        ADD 1.5 TO SCORE
015300        GO TO COMPARE
015400     END-IF.
015500     IF COURSE-ID = PREF(2) THEN
015600        ADD 1 TO SCORE
015700        GO TO COMPARE
015800     END-IF.
015900     IF COURSE-ID = PREF(3) THEN
016000        ADD 0.5 TO SCORE
016100        GO TO COMPARE
016200     END-IF.
016300     
016400 COMPARE.
016500*    DISPLAY COURSE-ID SID SCORE.
016600     
016700     IF SCORE > RANK(1) THEN
016800        MOVE RANK(2) TO RANK(3)
016900        MOVE RANK-ID(2) TO RANK-ID(3)
017000        MOVE RANK(1) TO RANK(2)
017100        MOVE RANK-ID(1) TO RANK-ID(2)
017200        MOVE SCORE TO RANK(1)
017300        MOVE SID TO RANK-ID(1)
017400        GO TO READ-CANDIT
017500     END-IF.
017600     IF SCORE = RANK(1) AND SID < RANK-ID(1) THEN
017700        MOVE RANK(2) TO RANK(3)
017800        MOVE RANK-ID(2) TO RANK-ID(3)
017900        MOVE RANK(1) TO RANK(2)
018000        MOVE RANK-ID(1) TO RANK-ID(2)
018100        MOVE SCORE TO RANK(1)
018200        MOVE SID TO RANK-ID(1)
018300        GO TO READ-CANDIT
018400     END-IF.
018500     IF SCORE > RANK(2) THEN
018600        MOVE RANK(2) TO RANK(3)
018700        MOVE RANK-ID(2) TO RANK-ID(3)
018800        MOVE SCORE TO RANK(2)
018900        MOVE SID TO RANK-ID(2)
019000        GO TO READ-CANDIT
019100     END-IF.
019200     IF SCORE = RANK(2) AND SID < RANK-ID(2) THEN
019300        MOVE RANK(2) TO RANK(3)
019400        MOVE RANK-ID(2) TO RANK-ID(3)
019500        MOVE SCORE TO RANK(2)
019600        MOVE SID TO RANK-ID(2)
019700        GO TO READ-CANDIT
019800     END-IF.
019900     IF SCORE > RANK(3) THEN
020000        MOVE SCORE TO RANK(3)
020100        MOVE SID TO RANK-ID(3)
020200        GO TO READ-CANDIT
020300     END-IF.
020400     IF SCORE = RANK(3) AND SID < RANK-ID(3) THEN
020500        MOVE SCORE TO RANK(3)
020600        MOVE SID TO RANK-ID(3)
020700        GO TO READ-CANDIT
020800     END-IF.
020900     GO TO READ-CANDIT.
021000     
021100 PRINT-FILE.
021200*    DISPLAY RANK-ID(1) RANK-ID(2) RANK-ID(3).
021300     MOVE COURSE-ID TO CID.
021400     MOVE RANK-ID(1) TO CANDI(1).
021500     MOVE RANK-ID(2) TO CANDI(2).
021600     MOVE RANK-ID(3) TO CANDI(3).
021700     IF CANDI(1) = 0 THEN
021800        MOVE '0000000000 ' TO CANDI(1)
021900     END-IF.
022000     IF CANDI(2) = 0 THEN
022100        MOVE '0000000000 ' TO CANDI(2)
022200     END-IF.
022300     IF CANDI(3) = 0 THEN
022400        MOVE '0000000000 ' TO CANDI(3)
022500     END-IF.
022600     MOVE x'0a' TO ENDLINE.
022700     OPEN OUTPUT OUTPUT-FILE.
022800     WRITE RESULT.
022900     
023000     GO TO READ-INSTRU.
023100     
023200 ENDDING.    
023300     CLOSE INSTRUCTORS-FILE.
023400     CLOSE CANDIDATES-FILE.
023500     CLOSE OUTPUT-FILE.
023600     
023700 STOP-RUN.
023800